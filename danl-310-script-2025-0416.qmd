---
title: "April 16, 2025 - Class Script"
subtitle: "DANL 310: Introduction to Data Analytics"
author: 
  - name: Byeong-Hak Choe
date: 2025-04-16

execute: 
  echo: true
  eval: true
  warning: false
  message: false
  fig-width: 9
  # fig-height: 5
  
format: 
  html:
    toc: true
    number-sections: true
    code-fold: show       # https://quarto.org/docs/output-formats/html-code.html  
    code-tools: true      # https://quarto.org/docs/reference/cells/cells-jupyter.html
    highlight-style: atom-one # atom-one tango espresso
---

```{r setup}
#| include: false
library(tidyverse)
library(skimr)
library(ggthemes)
library(hrbrthemes)
library(DT)
library(socviz) # textbook r package
# To set default ggplot theme
# theme_set(theme_fivethirtyeight() +
#           theme(strip.background = element_rect(fill="lightgray"),
#                 axis.title.x = 
#                   element_text(angle = 0,
#                                size = rel(1.33),
#                                margin = margin(10,0,0,0)),
#                 axis.title.y = 
#                   element_text(angle = 90,
#                                size = rel(1.33),
#                                margin = margin(0,10,0,0))
#                 )
          # ) # theme_minimal() becomes default
# scale_color_discrete <- function(...) scale_color_tableau(...)
# scale_fill_discrete <- function(...) scale_fill_tableau(...)
```

# Plotting Google Maps with `ggmap`

```{r}
library(ggmap)
library(gmapsdistance)
google_api <- "YOUR_GOOGLE_API"
register_google(google_api) # for the ggmap package
set.api.key(google_api)     # for the gmapsdistance package
```



```{r}
NYC_Map <- get_map("New York City", 
                   source = "google", 
                   api_key = apiKey, 
                   zoom = 13)

ggmap(NYC_Map) +
  theme_map() 
```




```{r}
ggmap(NYC_Map)
```

```{r}
ROC_Map <- get_map("Rochester, NY", 
                   source = "google", 
                   api_key = apiKey, 
                   zoom = 9) # the larger value, the more zoom-in

ggmap(ROC_Map) +
  theme_map()
```


```{r}

Geneseo_Map <- get_map("Geneseo, NY", 
                   source = "google", 
                   api_key = apiKey, 
                   zoom = 14) # the larger value, the more zoom-in

ggmap(Geneseo_Map) +
  theme_map()
```



```{r}
library(ggrepel)
locations <- geocode(
  c("South Hall, Geneseo, NY", 
    "Newton Hall, Geneseo, NY")
)

locations <- locations |>
  mutate(label = c("South Hall", "Newton Hall"))

ggmap(Geneseo_Map) + 
  geom_point(data = locations, size = 1, alpha = .5) +
  geom_label_repel(data = locations, 
                  aes(label = label),
                  box.padding = 1.75) +
  theme_map()
```

```{r}
library(showtext)
font_add_google("Roboto", "roboto")
font_add_google("Lato", "lato")
font_add_google("Poppins", "poppins")
font_add_google("Nunito", "nunito")
font_add_google("Annie Use Your Telescope", "annie")
font_add_google("Pacifico", "pacifico")
showtext_auto()  # Enables Google fonts in R plots.
```


```{r}
ggmap(Geneseo_Map) + 
  geom_point(data = locations, size = 1, alpha = .5) +
  geom_label_repel(data = locations, 
                  aes(label = label),
                  family = "pacifico",
                  box.padding = 1.75) +
  theme_map()
```

```{r}
route_df_noS <- route(
  from = "South Hall, Geneseo, NY",
  to   = "Newton Hall, Geneseo, NY",
  mode = "walking"
  )

route_df <- route(
  from = "South Hall, Geneseo, NY",
  to   = "Newton Hall, Geneseo, NY",
  mode = "walking",
  structure = "route"  # returns points along the path 
)

ggmap(Geneseo_Map) +
  geom_path(data = route_df, 
            aes(x = lon, y = lat), 
            color = "#1C4982", size = 2, 
            lineend = "round") +  # round, butt, square
  geom_point(data = locations, 
             aes(x = lon, y = lat), 
             size = 2, color = "darkred") +
  geom_text_repel(data = locations, 
                  aes(x = lon, y = lat, label = label),
                  family = "nunito", 
                  box.padding = 1.75) +
  theme_map()
```



```{r}
route_df <- route(
  from = "South Hall, Geneseo, NY",
  to   = "Newton Hall, Geneseo, NY",
  mode = "driving",
  structure = "route"  # returns points along the path 
)

ggmap(Geneseo_Map) +
  geom_path(data = route_df, 
            aes(x = lon, y = lat), 
            color = "#1C4982", size = 2, 
            lineend = "round") +  # round, butt, square
  geom_point(data = locations, 
             aes(x = lon, y = lat), 
             size = 2, color = "darkred") +
  geom_text_repel(data = locations, 
                  aes(x = lon, y = lat, label = label),
                  family = "nunito", 
                  box.padding = 1.75) +
  theme_map()

```



```{r}
# Available maptype options:
# "roadmap", "satellite", "terrain", "hybrid"
Geneseo_Map_Hybrid <- get_map("Geneseo, NY",
                              source = "google",
                              api_key = apiKey,
                              zoom = 14, 
                              maptype = "hybrid")

ggmap(Geneseo_Map_Hybrid) +
  geom_path(data = route_df, 
            aes(x = lon, y = lat), 
            color = "white", 
            size = 2, 
            lineend = "round",  # round, butt, square
            arrow = arrow() # Arrow option
            ) +  
  geom_point(data = locations, 
             aes(x = lon, y = lat), 
             size = 2, color = "darkred") +
  geom_label_repel(data = locations, 
                  aes(x = lon, y = lat, label = label),
                  family = "nunito", 
                  box.padding = 1.75) +
  theme_map()
```

```{r}
# install.packages("ggimage")
library(ggimage)

# Let's suppose we have an icon URL
icon_url <- "https://bcdanl.github.io/lec_figs/marker-icon-red.png"

ggmap(Geneseo_Map) +
  geom_image(data = locations,
             aes(x = lon, y = lat, image = icon_url),
             size = 0.05) +  # tweak size
  geom_path(data = route_df, 
            aes(x = lon, y = lat), 
            color = "darkblue", 
            size = .75, 
            lineend = "round",  # round, butt, square
            arrow = arrow() # Arrow option
            ) +  
  geom_label_repel(data = locations, 
                  aes(label = label),
                  box.padding = 1.75) +
  theme_map()
```



# Classwork 9

```{r}
library(tidyverse)
library(skimr)
library(ggthemes)
library(ggmap)
library(sf)
```


## Q1 - Dog Bite Map
```{r}
# GeoPackage file (.gkpg), a modern format for map data
nyc_zips_sf <- st_read("https://bcdanl.github.io/data/nyc_zips_sf.gkpg")  # sf format

nyc_dog_bites <- read_csv("https://bcdanl.github.io/data/nyc_dog_bites_all.csv") 
nyc_dog_license <- read_csv(
  'https://bcdanl.github.io/data/nyc_dog_license.csv')
```

```{r}
ggplot(nyc_zips_sf) +
  geom_sf()
```

```{r}
bites_per_zip <- nyc_dog_bites |> 
  count(zip_code) |> 
  filter(zip_code %in% nyc_zips_sf$zip_code)

dogs_per_zip <- nyc_dog_license |> 
  count(zip_code) |> 
  filter(zip_code %in% nyc_zips_sf$zip_code) |> 
  rename(tot = n)

rate_per_zip <- dogs_per_zip |> 
  left_join(bites_per_zip) |> 
  mutate(n = ifelse(is.na(n), 0, n), # optional
         pct = n/tot)


bite_map <- nyc_zips_sf |> 
  left_join(rate_per_zip)
```


```{r}
#| fig-width: 9
#| fig-height: 12
bite_map |> 
  ggplot() +
  geom_sf(color = "gray80", 
          size = 0.1,
          aes(fill = pct)) +
  scale_fill_viridis_c(option = "inferno",
                       breaks = seq(0, .15, .025),
                       labels = scales::percent) +
  labs(fill = "Dog Bite Rate",
       title = "",
       subtitle = "By Zip Code. Based on Licensing Data") +
  theme_map() +
  theme(legend.justification = c(.5,.5),
        legend.position = 'top',
        legend.direction = "horizontal",
        plot.title = element_text(hjust = .5,
                                  vjust = .5,
                                  face = 'bold',
                                  size = rel(2.5)),
        plot.subtitle = element_text(hjust = .5,
                                     vjust = .5,
                                     size = rel(1.25))) +
  coord_sf(crs = st_crs("ESRI:102003")) +
  guides(fill = guide_legend(title.position = "top",
                             label.position = "bottom",
                             keywidth = 2, nrow = 1))
```


## Q2 - Google Maps

```{r}
route1 <- route(
  from = "Central Park, NYC",
  to   = "Empire State Building, NYC",
  mode = "driving",
  structure = "route"
)

route2 <- route(
  from = "Empire State Building, NYC",
  to   = "Times Square, NYC",
  mode = "driving",
  structure = "route"
)

route3 <- route(
  from = "Times Square, NYC",
  to   = "Central Park, NYC",
  mode = "driving",
  structure = "route"
)
```


```{r}
route1 <- route1 |> 
  mutate(label = 1) 
route2 <- route2 |> 
  mutate(label = 2) 
route3 <- route3 |> 
  mutate(label = 3) 
  
routes <- rbind(route1, route2, route3)
```


```{r}
locations <- geocode(
  c("Central Park, NYC", 
    "Empire State Building, NYC",
    "Times Square, NYC")
) |> 
  mutate(
    label = 
      c("Central Park", 
        "Empire State Building",
        "Times Square")
  )

```

```{r}
NYC_Map <- get_map("Time Square, NYC", 
                   source = "google", 
                   api_key = apiKey, 
                   zoom = 13)

ggmap(NYC_Map) +
  theme_map() 
```


```{r}


icon_url <- "https://bcdanl.github.io/lec_figs/marker-icon-red.png"

ggmap(NYC_Map) +
  geom_image(data = locations,
             aes(x = lon, y = lat),
             image = icon_url) +
  geom_path(data = routes,
            aes(x = lon,
                y = lat,
                color = label),
            size = rel(2),
            show.legend = F) +
  geom_label_repel(data = locations,
                  aes(x = lon, y = lat,
                      label = label),
                  box.padding = 1.5,
                  alpha = .75,
                  family = 'pacifico') +
  theme_map() 
```






