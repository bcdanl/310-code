---
title: Lecture 7
subtitle: "DANL 310: Introduction to Data Analytics"
author: 
  - name: Byeong-Hak Choe
date: 2025-02-12

execute: 
  echo: true
  eval: true
  warning: false
  message: false
  fig-width: 9
  # fig-height: 5
  
format: 
  html:
    toc: true
    number-sections: true
    code-fold: show       # https://quarto.org/docs/output-formats/html-code.html  
    code-tools: true      # https://quarto.org/docs/reference/cells/cells-jupyter.html
    highlight-style: atom-one # atom-one tango espresso
---

```{r setup}
#| include: false
library(tidyverse)
library(skimr)
library(ggthemes)
library(hrbrthemes)
library(DT)
library(gapminder)
library(socviz) # textbook r package

# To set default ggplot theme
theme_set(theme_fivethirtyeight() +
          theme(strip.background = element_rect(fill="lightgray"),
                axis.title.x = 
                  element_text(angle = 0,
                               size = rel(1.33),
                               margin = margin(10,0,0,0)),
                axis.title.y = 
                  element_text(angle = 90,
                               size = rel(1.33),
                               margin = margin(0,10,0,0))
                )
          ) # theme_minimal() becomes default
```




```{r}
gss_sm <- socviz::gss_sm
```

```{r}
# n(): to count the number of observations for each group

bigregion_religion <- gss_sm |> 
  select(id, bigregion, religion) |> 
  arrange(bigregion, religion, id) |> 
  group_by(bigregion, religion) |> 
  summarize(n = n()) |> 
  mutate(tot = sum(n) ) |> 
  mutate(pct = 100 * n / tot)
  

bigregion_religion
```


```{r}
bigregion_religion |> 
  ggplot(aes(x = bigregion,
             y = pct,
             fill = religion)) +
  geom_bar(stat = "identity",
           position = "dodge2") + # geom_col()
  labs(x = "",
       y = "Percentage",
       fill = "Religion") +
  theme(legend.position = "top")
  
```

```{r}
gss_sm |> 
  select(id, bigregion, religion) |> 
  arrange(bigregion, religion, id) |> 
  group_by(bigregion, religion) |> 
  summarize(n = n()) |> 
  mutate(tot = sum(n) ) |> 
  mutate(pct = n / tot) |> 
  ggplot(aes(x = bigregion,
             y = pct,
             fill = religion)) +
  geom_bar(stat = "identity",
           position = "dodge2") + # geom_col()
  labs(x = "",
       y = "",
       fill = "Religion") +
  scale_y_continuous(labels = scales::percent) +
  theme(legend.position = "top")
```

# CW 5.1
```{r}

bigregion_religion <- gss_sm |> 
  select(id, bigregion, religion) |> 
  arrange(bigregion, religion, id) |> 
  group_by(bigregion, religion) |> 
  summarize(n = n()) |> 
  mutate(tot = sum(n) ) |> 
  mutate(pct =  n / tot)

bigregion_religion |> 
  ggplot(aes(x = pct,
             y = religion,
             fill = religion)) +
  geom_col(show.legend = F) +
  facet_wrap(~bigregion,
             nrow = 1) +
  scale_x_continuous(labels = scales::percent) +
  labs(y = "", x = "")

```


```{r}
organdata <- organdata
skimr::skim(organdata)
??organdata
```



```{r}
p <- ggplot(data = organdata,
            mapping = aes(x = year, y = donors))
p + 
  geom_line(aes(group = country)) + 
  facet_wrap(~ country) +
  theme(axis.text.x = 
          element_text(angle = 45))
```


```{r}

# bad
p <- ggplot(data = organdata,
            mapping = aes(x = year, y = donors))
p + 
  geom_line(aes(color = country)) + 
  theme(axis.text.x = 
          element_text(angle = 45))
```


```{r}
organdata |> 
  ggplot(aes(x = donors,
             y = country)) +
  geom_boxplot()
```


```{r}
skimr::skim(organdata)
```


```{r}
organdata <- organdata |> 
  mutate(country = fct_reorder(country,
                               donors,
                               na.rm = T),
         country_by_mean = fct_reorder(country,
                               donors,
                               mean,
                               na.rm = T),
         )

levels(organdata$country)
```
```{r}

levels(organdata$country_by_mean)
```


```{r}
organdata_orig <- socviz::organdata

levels(factor(organdata_orig$country))
```


```{r}
organdata |> 
  count(consent_law)
```

```{r}
by_country <- organdata |> 
  group_by(consent_law, country) |>
    summarize(donors_mean= mean(donors, na.rm = TRUE),
              donors_sd = sd(donors, na.rm = TRUE),
              gdp_mean = mean(gdp, na.rm = TRUE),
              health_mean = mean(health, na.rm = TRUE),
              roads_mean = mean(roads, na.rm = TRUE),
              cerebvas_mean = mean(cerebvas, na.rm = TRUE))
```


```{r}
by_country2 <- organdata |> 
  group_by(consent_law, country) |>
  summarize_if(is.numeric, 
               lst(mean, sd), 
               na.rm = TRUE) |>
  ungroup()
```

# CW 5.2a

```{r}
by_country2 |> 
  ggplot(aes(x = donors_mean,
             y = country,
             color = consent_law)) +
  geom_point() +
  labs(x = "Donor Procurement Rate",
       y = "") +
  theme(legend.position = "top")
```


# CW 5.2b
```{r}
by_country2 |> 
  ggplot(aes(x = donors_mean,
             y = country)) +
  geom_point() +
  facet_wrap(~consent_law, ncol = 1,
             scales = "free_y") +
  labs(x = "Donor Procurement Rate",
       y = "") 
```

