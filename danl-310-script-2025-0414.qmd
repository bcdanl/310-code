---
title: "April 02, 2025 - Class Script"
subtitle: "DANL 310: Introduction to Data Analytics"
author: 
  - name: Byeong-Hak Choe
date: 2025-04-02

execute: 
  echo: true
  eval: true
  warning: false
  message: false
  fig-width: 9
  # fig-height: 5
  
format: 
  html:
    toc: true
    number-sections: true
    code-fold: show       # https://quarto.org/docs/output-formats/html-code.html  
    code-tools: true      # https://quarto.org/docs/reference/cells/cells-jupyter.html
    highlight-style: atom-one # atom-one tango espresso
---

```{r setup}
#| include: false
library(tidyverse)
library(skimr)
library(ggthemes)
library(hrbrthemes)
library(DT)
library(socviz) # textbook r package
# To set default ggplot theme
# theme_set(theme_fivethirtyeight() +
#           theme(strip.background = element_rect(fill="lightgray"),
#                 axis.title.x = 
#                   element_text(angle = 0,
#                                size = rel(1.33),
#                                margin = margin(10,0,0,0)),
#                 axis.title.y = 
#                   element_text(angle = 90,
#                                size = rel(1.33),
#                                margin = margin(0,10,0,0))
#                 )
          # ) # theme_minimal() becomes default
# scale_color_discrete <- function(...) scale_color_tableau(...)
# scale_fill_discrete <- function(...) scale_fill_tableau(...)
```


## Map Data

```{r}
library(tidyverse)  # For ggplot, dplyr, and friends
library(sf)         # For GIS magic

# Example shapefile loading:
world_map <- read_sf("/Users/bchoe/Documents/websites/310-code/maps/ne_110m_admin_0_countries/ne_110m_admin_0_countries.shp")
us_states <- read_sf("/Users/bchoe/Documents/websites/310-code/maps/cb_2022_us_state_20m/cb_2022_us_state_20m.shp")
us_counties <- read_sf("/Users/bchoe/Documents/websites/310-code/maps/cb_2022_us_county_5m/cb_2022_us_county_5m.shp")
us_states_hires <- read_sf("/Users/bchoe/Documents/websites/310-code/maps/ne_10m_admin_1_states_provinces/ne_10m_admin_1_states_provinces.shp")
rivers_global <- read_sf("/Users/bchoe/Documents/websites/310-code/maps/ne_10m_rivers_lake_centerlines/ne_10m_rivers_lake_centerlines.shp")
rivers_na <- read_sf("/Users/bchoe/Documents/websites/310-code/maps/ne_10m_rivers_north_america/ne_10m_rivers_north_america.shp")
lakes <- read_sf("/Users/bchoe/Documents/websites/310-code/maps/ne_10m_lakes/ne_10m_lakes.shp")
ny_schools <- read_sf("/Users/bchoe/Documents/websites/310-code/maps/tl_2021_36_unsd/tl_2021_36_unsd.shp")
```

```{r}
# Remove Antarctica for plotting
world_sans_antarctica <- world_map |> 
  filter(ISO_A3 != "ATA")

# Basic map
ggplot() + 
  geom_sf(data = world_sans_antarctica)
```
```{r}
ggplot() + 
  geom_sf(data = world_sans_antarctica, 
          fill = "#669438", 
          color = "#32481B", 
          size = 0.25) +
  theme_void()
```


```{r}
ggplot() + 
  geom_sf(data = world_sans_antarctica, 
          fill = "#669438", 
          color = "#32481B", 
          size = 0.25) +
  theme_map()
```

```{r}
class(world_sans_antarctica)
```

```{r}
ggplot() + 
  geom_sf(data = world_sans_antarctica, 
          aes(fill = 
                as.factor(MAPCOLOR7)),
          color = "#401D16", 
          size = 0.25) +
  scale_fill_viridis_d(
    option = "plasma") +
  guides(fill = "none") +
  theme_void()
```


```{r}
lower_48 <- us_states |> 
  filter(!(NAME %in% c("Alaska", "Hawaii", "Puerto Rico")))

# NAD83
ggplot() + 
  geom_sf(data = lower_48, fill = "#192DA1", color = "white", size = 0.25) +
  coord_sf(crs = st_crs("EPSG:4269")) +
  theme_void()
```


```{r}

ggplot() + 
  geom_sf(data = us_states, fill = "#192DA1", color = "white", size = 0.25) +
  coord_sf(crs = st_crs("EPSG:4269")) +
  theme_void()
```



```{r}
library(tigris)
us_states_shifted <- us_states |> 
  shift_geometry()  ## from the `tigris` package
ggplot() +
  geom_sf(data = us_states_shifted) +
  coord_sf(crs = st_crs("ESRI:102003")) +
  theme_void()
```




```{r}
us_states_shifted_outside <- us_states |> 
  shift_geometry(position = "outside")

ggplot() +
  geom_sf(data = us_states_shifted_outside) +
  coord_sf(crs = st_crs("ESRI:102003")) +
  theme_void()
```


```{r}
only_ny <- lower_48 |> 
  filter(NAME == "New York")

ggplot() +
  geom_sf(data = only_ny, fill = "#1C4982") +
  theme_void()
```
```{r}
only_ny_high <- us_states_hires |> 
  filter(iso_3166_2 == "US-NY")

ggplot() +
  geom_sf(data = only_ny_high, fill = "#1C4982") +
  theme_void() +
  coord_sf(crs = st_crs("EPSG:2239"))
```

```{r}
ny_counties <- us_counties |> 
  filter(STATEFP == "36")

ggplot() +
  geom_sf(data = ny_counties) +
  theme_void()
```


```{r}
ggplot() +
  geom_sf(data = only_ny_high, color = "#1C4982", fill = "#1C4982", size = 3) +
  geom_sf(data = ny_counties, fill = "#A5D46A", color = "white") +
  theme_void()
```


```{r}
# Create a single unioned polygon from the counties:
only_ny_high_adjusted <- ny_counties |>
  summarize(geometry = st_union(geometry))

ggplot() +
  geom_sf(data = ny_counties, fill = "#A5D46A", color = "white") +
  geom_sf(data = only_ny_high_adjusted, fill=NA, color = "black", size = 3) +
  theme_void()
```

```{r}
# To ensure both data sets share the same CRS
st_crs(only_ny)
st_crs(rivers_na)

only_ny_4326 <- only_ny |> 
  st_transform(crs = st_crs("EPSG:4326"))

ny_rivers_na <- st_intersection(only_ny_4326, rivers_na)

ggplot() +
  geom_sf(data = only_ny) +
  geom_sf(data = ny_rivers_na, color = "#1C4982") +
  theme_void()
```



```{r}
# To ensure data sets share the same CRS
st_crs(only_ny_high_adjusted)
st_crs(rivers_na)
st_crs(rivers_global)
st_crs(lakes)

only_ny_high_adjusted_crs <- st_transform(
  only_ny_high_adjusted,
  crs = st_crs(rivers_na)
)

ny_rivers_na <- st_intersection(
  only_ny_high_adjusted_crs,
  rivers_na
)


ny_rivers_global <- st_intersection(
  only_ny_high_adjusted_crs,
  rivers_global
)


lakes_crs <- lakes |> 
  st_transform(crs = st_crs(only_ny_high_adjusted)) |> 
  st_make_valid()


ny_lakes <- st_intersection(only_ny_high_adjusted, lakes_crs)





ggplot() +
  geom_sf(data = only_ny_high, size = 0.1) +
  geom_sf(data = ny_rivers_global, size = 0.3, color = "#1C4982") +
  geom_sf(data = ny_rivers_na, size = 0.15, color = "#1C4982") +
  geom_sf(data = ny_lakes, size = 0.3, fill = "#1C4982", color = NA) +
  coord_sf(crs = st_crs("EPSG:4326")) +
  theme_void()
```


```{r}
ggplot() +
  geom_sf(data = ny_schools) +
  geom_sf(data = ny_schools, aes(fill = AWATER), size = 0.75, alpha = 0.5,
          show.legend = F) +
  theme_void()
```



```{r}
ny_cities <- tribble(
  ~city,           ~lat,       ~long,
  "New York City", 40.712776,  -74.005974,
  "Albany",        42.652580,  -73.756230,
  "Buffalo",       42.886447,  -78.878369,
  "Rochester",     43.156578,  -77.608849,
  "Syracuse",      43.048122,  -76.147424
)


ny_cities_geometry <- ny_cities |> 
  st_as_sf(coords = c("long","lat"), crs = st_crs("EPSG:4326"))

class(ny_cities)
class(ny_cities_geometry)


ggplot() +
  geom_sf(data = only_ny_high_adjusted, fill = "#1C4982") +
  geom_sf(data = ny_cities_geometry, size = 3) +
  theme_void()
```


```{r}
ggplot() +
  geom_sf(data = only_ny_high_adjusted, fill = "#1C4982") +
  geom_sf(data = ny_cities_geometry, size = 3) +
  geom_sf_label(aes(label = city), data = ny_cities_geometry, nudge_y = 0.2) +
  theme_void()
```


```{r}
library(tidygeocoder)
some_addresses <- tribble(
  ~name, ~address,
  "The White House", "1600 Pennsylvania Ave NW, Washington, DC",
  "State University of New York at Geneseo", "1 College Cir, Geneseo, NY 14454"
)

geocoded_addresses <- some_addresses |> 
  geocode(address, method = "census")

# Convert to sf
addresses_geometry <- geocoded_addresses |> 
  st_as_sf(coords = c("long","lat"), crs = st_crs("EPSG:4326"))

# Plot on a US map
ggplot() + 
  geom_sf(data = lower_48, fill = "#1C4982", color = "white", size = 0.25) +
  geom_sf(data = addresses_geometry, size = 5, color = "white") +
  geom_sf_label(data = addresses_geometry, aes(label = name),
                size = 4, fill = "white", nudge_y = 175000) + 
  coord_sf(crs = st_crs("ESRI:102003")) +
  theme_void()
```


```{r}
# install.packages('WDI')
library(WDI)

WDIsearch('life expectancy')

indicators <- c(life_expectancy = "SP.DYN.LE00.IN")
wdi_raw <- WDI(country = "all", 
               indicators, 
               extra = TRUE, 
               start=2015, end=2015)
```

```{r}
# Suppose wdi_raw is loaded
wdi_clean_small <- wdi_raw |> select(life_expectancy, iso3c)

world_map_with_life_expectancy <- world_sans_antarctica |> 
  left_join(wdi_clean_small, 
            by = c("ISO_A3" = "iso3c"))

ggplot() + 
  geom_sf(data = world_map_with_life_expectancy, 
          aes(fill = life_expectancy), size=0.25) +
  coord_sf(crs = st_crs("ESRI:54030")) +
  scale_fill_viridis_c(option="viridis") +
  labs(fill = "Life Expectancy") +
  theme_void() +
  theme(legend.position = "bottom")
```



```{r}
world_sans_antarctica_fixed <- world_sans_antarctica |> 
  mutate(ISO_A3 = case_when(
    ADMIN == "Norway" ~ "NOR",
    ADMIN == "France" ~ "FRA",
    TRUE ~ ISO_A3
  )) |> 
  left_join(wdi_clean_small, by = c("ISO_A3" = "iso3c"))

ggplot() + 
  geom_sf(data = world_sans_antarctica_fixed, aes(fill = life_expectancy), size=0.25) +
  coord_sf(crs = st_crs("ESRI:54030")) +
  scale_fill_viridis_c(option="viridis") +
  labs(fill = "Life Expectancy") +
  theme_void() +
  theme(legend.position = "bottom")
```


```{r}
library(ggmap)
library(gmapsdistance)
google_api <- "YOUR_GOOGLE_MAPS_API_KEY"
register_google(google_api) # for the ggmap package
set.api.key(google_api)     # for the gmapsdistance package
```



```{r}
NYC_Map <- get_map("New York City", 
                   source = "google", 
                   api_key = apiKey, 
                   zoom = 10)

ggmap(NYC_Map) +
  theme_map() 
```








