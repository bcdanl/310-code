---
title: "March 10, 2025 - Class Script"
subtitle: "DANL 310: Introduction to Data Analytics"
author: 
  - name: Byeong-Hak Choe
date: 2025-03-10

execute: 
  echo: true
  eval: true
  warning: false
  message: false
  fig-width: 9
  # fig-height: 5
  
format: 
  html:
    toc: true
    number-sections: true
    code-fold: show       # https://quarto.org/docs/output-formats/html-code.html  
    code-tools: true      # https://quarto.org/docs/reference/cells/cells-jupyter.html
    highlight-style: atom-one # atom-one tango espresso
---

```{r setup}
#| include: false
library(tidyverse)
library(skimr)
library(ggthemes)
library(hrbrthemes)
library(DT)
library(gapminder)
library(socviz) # textbook r package
library(nycflights13)
# To set default ggplot theme
# theme_set(theme_fivethirtyeight() +
#           theme(strip.background = element_rect(fill="lightgray"),
#                 axis.title.x = 
#                   element_text(angle = 0,
#                                size = rel(1.33),
#                                margin = margin(10,0,0,0)),
#                 axis.title.y = 
#                   element_text(angle = 90,
#                                size = rel(1.33),
#                                margin = margin(0,10,0,0))
#                 )
          # ) # theme_minimal() becomes default
# scale_color_discrete <- function(...) scale_color_tableau(...)
# scale_fill_discrete <- function(...) scale_fill_tableau(...)
```



Consider the `flights` data.frame from the `nycflights13` package.

```{r}
library(tidyverse)
library(nycflights13)
library(lubridate)
flights <- flights

DT::datatable(flights |> head(100))
```



# Question 1

- Look at the number of cancelled flights per day. Is there a pattern? Is the proportion of cancelled flights related to the average delay?
  - Assume that a flight is cancelled if either `dep_delay`, `arr_delay`, or both are missing.

*Answer:*

```{r}
q1 <- flights |> 
  mutate(is_cancelled = is.na(dep_delay) | is.na(arr_delay),
         date = make_date(year,month,day)) |> 
  group_by(date, is_cancelled) |> 
  summarise(n = n(),
            dep_delay = mean(dep_delay, na.rm = T),
            arr_delay = mean(arr_delay, na.rm = T)) |> 
  mutate(prop = n / sum(n)) 
  # filter(is_cancelled == T) |> 
  # arrange(-prop)


q1_1 <- q1 |> 
   filter(is_cancelled == T) |>
   arrange(-prop)
```

```{r}

q1 |> 
  filter(is_cancelled == T) |> 
  ggplot(aes(x = date, y = prop)) +
  geom_col() +
  theme(axis.text.x = element_text(angle = 90))
```
```{r}
q1 |> 
  ggplot(aes(x = dep_delay, fill = is_cancelled)) +
  geom_density(alpha = .4)
```


```{r}
q1 |> 
  ggplot(aes(x = arr_delay, fill = is_cancelled)) +
  geom_density(alpha = .4)
```


```{r}
q1_1 |> 
  filter(prop < .2) |> 
  ggplot(aes(x = prop, y = dep_delay)) +
  geom_point(alpha = .3) +
  geom_smooth() +
  geom_smooth(method = lm, color = 'darkorange')
```


<br>

# Question 2
- Which `carrier` has the worst arrival delays?
- Calculate the proportion of flights with an arrival delay greater than 15 minutes for each carrier and for each origin.
- Can you disentangle the effects of bad airports vs. bad carriers? Why/why not?

*Answer:*

```{r}
q2_1 <- flights |> 
  group_by(carrier) |> 
  summarise(arr_delay_max = max(arr_delay, na.rm = T),
            n = n()) |> 
  arrange(-arr_delay_max)

q2_1

q2_2 <- flights |> 
  group_by(carrier, origin) |> 
  summarize(long_arr_delay = mean(arr_delay > 15, na.rm = T)) |> 
  filter(n() == 3)

```


```{r}
q2_2 |> 
  ggplot(aes(x = carrier, y = long_arr_delay, fill = carrier)) +
  geom_col(show.legend = F) +
  facet_wrap(~origin, ncol = 1) +
  scale_fill_viridis_d()
```



```{r}
q2_2 |> 
  ggplot(aes(x = origin, y = long_arr_delay, fill = origin)) +
  geom_col(show.legend = F) +
  facet_wrap(~carrier, nrow = 1) +
  scale_fill_viridis_d()
```

```{r}
m <- lm(arr_delay ~ origin + carrier, data = flights)
m_int <- lm(arr_delay ~ origin * carrier, data = flights)

summary(m)
summary(m_int)
```

<br>

# Question 3
- Find all destinations that are flown by at least two carriers. Use that information to rank the carriers.

*Answer:*

```{r}
q3_1 <- flights |> 
  group_by(carrier, dest) |> 
  summarize(n_flights = n()) |> 
  summarise(n_dests = n()) |> 
  arrange(-n_dests)


q3_2 <- flights |> 
  distinct(carrier, dest) |> 
  count(carrier) |> 
  arrange(-n)

q3_3 <- flights |> 
  distinct(carrier, dest) |> 
  count(dest) |> 
  arrange(-n) |> 
  filter(n >= 2)


```




<br>


```{r}
flights |> 
  group_by(year, month, day) |>
  filter(dense_rank(desc(arr_delay)) < 10)
```

```{r}
popular_dests <- flights |> 
  group_by(dest) |> 
  filter(n() > 17250)

popular_dests |> 
  distinct(dest)
```


```{r}
popular_dests <- flights |> 
  group_by(dest)

popular_dests |> 
  filter(arr_delay > 0) |> 
  mutate(prop_delay = arr_delay / sum(arr_delay)) |> 
  relocate(arr_delay, prop_delay)
```

# tidy data
```{r}
library(tidyverse)
table1 <- table1
table2 <- table2
table3 <- table3

## Spread across two tibbles
table4a<- table4a  ## cases
table4b <- table4b
```



```{r}
table4a |> 
  pivot_longer(cols = c(`1999`, `2000`), 
               names_to = "year", 
               values_to = "cases")
```


```{r}
table2
table2 |>
    pivot_wider(names_from = type, values_from = count, names_prefix = "var_")
```



```{r}
table3

table3 |> 
  separate(rate, into = c("cases", "population"))
```
```{r}
table3 |> 
  separate(year, into = c("century", "year"), sep = 2)
```




```{r}
table5 <- table5
table5
```


```{r}
table5 |> 
  unite(new, century, year)
  
```

```{r}

table5 |> 
  unite(new, century, year, sep = "")
```



```{r}
df1 <- data.frame(id = 1:3, 
                  name = c("Alice", "Bob", "Charlie")
                  )
df2 <- data.frame(id = 4:6, 
                  name = c("Dave", "Eve", "Frank")
                  )


df_row <- df1 |> 
  rbind(df2)
df_row

```


```{r}

df_col <- df1 |> 
  cbind(df2)
df_col

```



```{r}
weather <- weather
```


```{r}
planes
```




