---
title: "March 10, 2025 - Class Script"
subtitle: "DANL 310: Introduction to Data Analytics"
author: 
  - name: Byeong-Hak Choe
date: 2025-03-10

execute: 
  echo: true
  eval: true
  warning: false
  message: false
  fig-width: 9
  # fig-height: 5
  
format: 
  html:
    toc: true
    number-sections: true
    code-fold: show       # https://quarto.org/docs/output-formats/html-code.html  
    code-tools: true      # https://quarto.org/docs/reference/cells/cells-jupyter.html
    highlight-style: atom-one # atom-one tango espresso
---

```{r setup}
#| include: false
library(tidyverse)
library(skimr)
library(ggthemes)
library(hrbrthemes)
library(DT)
library(gapminder)
library(socviz) # textbook r package
library(nycflights13)
# To set default ggplot theme
# theme_set(theme_fivethirtyeight() +
#           theme(strip.background = element_rect(fill="lightgray"),
#                 axis.title.x = 
#                   element_text(angle = 0,
#                                size = rel(1.33),
#                                margin = margin(10,0,0,0)),
#                 axis.title.y = 
#                   element_text(angle = 90,
#                                size = rel(1.33),
#                                margin = margin(0,10,0,0))
#                 )
          # ) # theme_minimal() becomes default
# scale_color_discrete <- function(...) scale_color_tableau(...)
# scale_fill_discrete <- function(...) scale_fill_tableau(...)
```



Consider the `flights` data.frame from the `nycflights13` package.

```{r}
library(tidyverse)
library(nycflights13)
library(lubridate)
flights <- flights

DT::datatable(flights |> head(100))
```


```{r}
airlines <- airlines
flights <- flights

flights_airlines <- flights |> 
  left_join(airlines)

```



```{r}
weather <- weather

flights |> 
  left_join(weather)

flights |> 
  left_join(weather,
            by = c('year', 'month', 'day', 'origin')) # problematic


```


```{r}
airports <- airports

flights |> 
  left_join(airports)

flights |> 
  left_join(airports, 
            c("dest" = "faa"))
  
```


# Factor

```{r}
months <- c(
  "Jan", "Feb", "Mar", "Apr", 
  "May", "Jun", "Jul", "Aug", 
  "Sep", "Oct", "Nov", "Dec")
x1 <- 
  c("Dec", "Apr", "Jan", "Mar")

x1_factor <- factor(x1)
levels(x1_factor)



y1 <- factor(x1, 
             levels = months)

y1
sort(y1)
```


```{r}
df <- data.frame(
  x = x1
)

df <- df |> 
  mutate(x_fct = factor(x,
                        levels = c("Jan", "Feb", "Mar", "Apr", 
                                   "May", "Jun", "Jul", "Aug", 
                                   "Sep", "Oct", "Nov", "Dec")),
         )

```


```{r}
library(socviz)
gss_cat <- gss_cat

gss_cat |> 
  count(race)

class(gss_cat$race)
levels(gss_cat$race)
```


```{r}
relig_summary <- gss_cat |>
  group_by(relig) |>
  summarize(
    age = mean(age, na.rm = T),
    tvhours = mean(tvhours,  na.rm = T),
    n = n()
  )
```


```{r}
ggplot(relig_summary, 
       aes(x = tvhours, y = relig)) + 
  geom_col()
```



```{r}
relig_summary |> 
  mutate(relig_fct = fct_reorder(relig, tvhours)) |> 
  ggplot(aes(x = tvhours, y = relig_fct)) + 
  geom_col()
```

```{r}
rincome_summary <- gss_cat |>
  group_by(rincome) |>
  summarize(
    age = mean(age, na.rm = T),
    tvhours = mean(tvhours, na.rm = T),
    n = n()
  )
```



```{r}

ggplot(rincome_summary, 
       aes(x = age, y = rincome ) )  + 
  geom_point()

```


```{r}

ggplot(rincome_summary, 
       aes(age, fct_reorder(rincome, age) ) )  + 
  geom_point()
```

```{r}
levels(rincome_summary$rincome)
ggplot(rincome_summary, 
       aes(age, relevel(rincome, ref = "Not applicable") ) )  + 
  geom_point()
```


# Strings

```{r}
str_length(c("a", "R for data science", NA))
str_c("x", "y", "z")
str_c(c("x", "y", "z"), sep = ", ")

str_c("prefix-", c("a", "b", "c"), "-suffix")

str_c(c("x", "y", "z"), collapse = ", ")
```
```{r}
x <- c("Apple", "Banana", "Pear")
str_sub(x, 1, 3)

## negative numbers count backwards from end
str_sub(x, -3, -1)
```


```{r}
x <- c("apple", "banana", "pear")

str_detect(x, "e")
str_replace(x, "a", "-")

str_replace_all(x, "a", "-")
```


```{r}

sentences


sentences |>
  head(5) |> 
  str_split(" ")
```

```{r}
library(lubridate)
today()
now()
```



```{r}
class("2017-01-31")
ymd("2017-01-31")
class(ymd("2017-01-31"))


mdy("January 31st, 2017")


dmy("31-Jan-2017")

ymd(20170131)

ymd_hms("2017-01-31 20:11:59")
mdy_hm("01/31/2017 08:01")

ymd(20170131, tz = "UTC")
```

```{r}
flights |> 
  select(year, month, day, hour, minute)
  
flights |> 
  select(year, month, day, hour, minute) |> 
  mutate(departure = make_datetime(year, month, day, hour, minute))
  
flights |> 
  select(year, month, day, hour, minute) |> 
  mutate(departure = make_date(year, month, day))
```



```{r}
flights |> 
  mutate(hour_sec = hour * 60 * 60,
         minute_sec = minute * 60,
         dep_time = hour_sec + minute_sec) |> 
  ggplot(aes(dep_time)) + 
  geom_histogram(binwidth = 86400) ## 86400 seconds = 1 day
```
```{r}

flights |> 
  mutate(dep_time = make_datetime(year, month, day, hour, minute)) |> 
  ggplot(aes(dep_time)) + 
  geom_freqpoly(binwidth = 86400) ## 86400 seconds = 1 day
```
```{r}
flights |> 
  mutate(dep_time = make_datetime(year, month, day, hour, minute)) |> 
  filter(dep_time < ymd(20130102)) |> 
  ggplot(aes(dep_time)) + 
  geom_freqpoly(binwidth = 600) ## 10 minutes
```
```{r}
today()
as_datetime(today())
now()
as_date(now())
```





# CW 6 Question 3

```{r}
n_tweets_long <- read_csv(
  'https://bcdanl.github.io/data/n_tweets_long.csv')
```

```{r}
df_bar <- n_tweets_long |> 
  filter(str_detect(type, "n_ot")) |> 
  mutate(type = ifelse(str_detect(type, "us"),
                       "US",
                       "Worldwide"))

df_line <- n_tweets_long |> 
  filter(str_detect(type, "n_rt")) |> 
  mutate(type = ifelse(str_detect(type, "us"),
                       "US",
                       "Worldwide"))


ggplot(data = df_bar,
       aes(x = year, y = n)) +
  geom_bar(stat = "identity",
           position = "dodge",
           aes(fill = type)) +
  geom_line(data = df_line,
            aes(color = type)) +
  geom_point(data = df_line,
             color = "black") +
  scale_x_continuous(breaks = 2012:2017) +
  scale_y_comma() + # from "hrbrthemes" package
  guides(
    fill = 
      guide_legend(
        reverse = TRUE,
        # title.position = "top",
        label.position = "bottom",
        keywidth = 3,
        ncol = 1),
    fill = 
      guide_legend(
        reverse = TRUE,
        # title.position = "top",
        label.position = "bottom",
        keywidth = 3,
        ncol = 1),
    ) +
  theme_ipsum() +
  theme(legend.position = "top")


```


