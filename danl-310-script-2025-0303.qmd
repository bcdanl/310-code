---
title: "Feb 24, 2025 - Class Script"
subtitle: "DANL 310: Introduction to Data Analytics"
author: 
  - name: Byeong-Hak Choe
date: 2025-02-26

execute: 
  echo: true
  eval: true
  warning: false
  message: false
  fig-width: 9
  # fig-height: 5
  
format: 
  html:
    toc: true
    number-sections: true
    code-fold: show       # https://quarto.org/docs/output-formats/html-code.html  
    code-tools: true      # https://quarto.org/docs/reference/cells/cells-jupyter.html
    highlight-style: atom-one # atom-one tango espresso
---

```{r setup}
#| include: false
library(tidyverse)
library(skimr)
library(ggthemes)
library(hrbrthemes)
library(DT)
library(gapminder)
library(socviz) # textbook r package

# To set default ggplot theme
# theme_set(theme_fivethirtyeight() +
#           theme(strip.background = element_rect(fill="lightgray"),
#                 axis.title.x = 
#                   element_text(angle = 0,
#                                size = rel(1.33),
#                                margin = margin(10,0,0,0)),
#                 axis.title.y = 
#                   element_text(angle = 90,
#                                size = rel(1.33),
#                                margin = margin(0,10,0,0))
#                 )
          # ) # theme_minimal() becomes default
# scale_color_discrete <- function(...) scale_color_tableau(...)
# scale_fill_discrete <- function(...) scale_fill_tableau(...)
```

```{r}
library(tidyverse)
library(RColorBrewer)
library(hrbrthemes)
library(socviz)
library(ggthemes)
```


```{r}
studebt <- studebt
```



```{r}
studebt

p_xlab <- "Amount Owed, in thousands of Dollars"
p_title <- "Outstanding Student Loans"
p_subtitle <- "44 million borrowers owe a total of $1.3 trillion"
p_caption <- "Source: FRB NY"

f_labs <- c(`Borrowers` = "Percent of\nall Borrowers",
            `Balances` = "Percent of\nall Balances")
```

```{r}
p <- ggplot(data = studebt,
            aes(x = pct/100, y = Debt,
                fill = type))

p +
  geom_col() +
  scale_fill_brewer(
    type = "qual", palette = "Dark2") +
  scale_x_percent() # from hrbrthemes package

```
```{r}
p <- ggplot(
  studebt, 
  aes(x = pct/100, y = type, 
      fill = Debtrc))
p1 <- p + 
  geom_col(color = "gray80")
p1
```



```{r}
p1 +
  scale_y_discrete(labels = as_labeller(f_labs)) +
  scale_fill_viridis_d(option =  "A") +
  guides(
    fill = guide_legend(
      reverse = T,
      nrow = 1,
      label.position = "bottom",
      title.position = "top",
      keywidth = 2.75
    )
  ) +
  labs(x = NULL, y = NULL,
       fill = "Amount Owed, in thousands of dollars",
       caption = p_caption,
       title = p_title,
       subtitle = p_subtitle) +
  theme_ipsum() +
  theme(legend.position = "top")
```


# Data Transformation Basics

```{r}
library(tidyverse)
library(nycflights13)
library(skimr)
flights <- flights
View(flights) 
?flights
skim(flights)
```


```{r}
flights |> filter(month == 1, day == 1)
```

```{r}
class(flights$month == 1)

```



```{r}
df <- tibble(y = c(1, NA, 3))
df
```


```{r}

df |> 
  filter(y > 1)

```

```{r}
df |> 
  filter(is.na(y) | y > 1)
```



- Departed in summer (July, August, and September)
```{r}
flights |> 
  filter(month == 7 | month == 8 | month == 9 )
```


```{r}
flights |> 
  filter(month == 7 & month == 8 & month == 9 )
```


## arrange
```{r}
flights |> 
  arrange(-dep_delay)
```


```{r}

flights |> 
  arrange( desc(dep_delay) )
```


```{r}
flights |> 
  arrange(-carrier)
```


```{r}
df
```


```{r}
df |> 
  arrange(y)
```


```{r}
df |> 
  arrange(-y)
```






```{r}
df |> 
  arrange(-is.na(y), -y)
```



```{r}
flights |> 
  select(starts_with("sched_"))
```



```{r}
flights |> 
  select(ends_with("time"))
```

```{r}
flights |> 
  rename(tail_num = tailnum)
```


```{r}
flights |> 
  relocate(time_hour, air_time)
```


```{r}
flights |> 
  mutate(
    gain = dep_delay - arr_delay,
    speed = distance / air_time * 60
  )
```





```{r}
flights |> 
  mutate(
    gain = dep_delay - arr_delay,
    speed = distance / air_time * 60,
    .before = day
  )
```




```{r}
flights |> 
  mutate(
    gain = dep_delay - arr_delay,
    speed = distance / air_time * 60,
    .after = day
  )
```



```{r}
x <- 1:10

ex <- data.frame(
  x = x
)

ex
```


```{r}
ex |> 
  mutate(
    x_lag = lag(x),
    x_lead = lead(x),
    x_cumsum = cumsum(x),
    x_cummean = cummean(x),
    x_log = log(x),
    x_log10 = log10(x)
  )
```



```{r}
df_gdp <- data.frame(
  year = 2017:2024,
  gdp = c(100, 108, 118, 120, 
          100, 105, 109, 115)
)

df_gdp
```


$$
\text{GDP Growth Rate}_{t+1} = \frac{\text{GDP}_{t+1} - \text{GDP}_{t}}{\text{GDP}_{t}}

# gdp_t+1 = 108
# gdp_t = 100
$$



```{r}
df_gdp |> 
  mutate(gdp_lag = lag(gdp),
         nume = gdp - gdp_lag,
         r = nume / gdp_lag)
```


```{r}
rank_me <- tibble( x = c(10, 5, 1, 5, 5, NA) )
rank_me <- rank_me |> 
  mutate(id_x = row_number(x),
         x_min_rank = min_rank(x),
         x_dense_rank = dense_rank(x)
         )
```



```{r}
flight_season <- flights |>  mutate(
    summer_month = if_else(month %in% c(6, 7, 8), TRUE, FALSE)) |> 
  select(month, summer_month)
flight_season
```


```{r}

flight_season <- flights |>  mutate(
    summer_month = if_else(month %in% c(6, 7, 8), TRUE, "FALSE")) |> 
  select(month, summer_month)

```

```{r}

flight_season <- flights |>  mutate(
    summer_month = ifelse(month %in% c(6, 7, 8), TRUE, "FALSE")) |> 
  select(month, summer_month)

```


```{r}

flight_season <- flights |>  mutate(  ## ifelse() is less restrictive
    summer_month = ifelse(month %in% c(6, 7, 8), TRUE, 0))|> 
  select(month, summer_month)
```

